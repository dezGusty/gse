use super::db::Conn as DbConn;
use rocket_contrib::json::Json;
use super::models::{Player, NewPlayer};
use serde_json::Value;
use crate::models::PlayerData;

#[post("/players", format = "application/json")]
pub fn get_all(conn: DbConn) -> Json<Value> {
    let users = Player::get_all_players(&conn);
    Json(json!({
        "status": 200,
        "result": users,
    }))
}

// #[post("/newPlayer", format = "application/json", data = "<new_user>")]
// pub fn new_user(conn: DbConn, new_user: Json<NewPlayer>) -> Json<Value> {
//     Json(json!({
//         "status": Player::insert_user(new_user.into_inner(), &conn),
//         "result": Player::get_all_users(&conn).first(),
//     }))
// }

// #[post("/getPlayer", format = "application/json", data = "<user_data>")]
// pub fn find_user(conn: DbConn, user_data: Json<PlayerData>) -> Json<Value> {
//     Json(json!({
//         "status": 200,
//         "result": Player::get_user_by_username(user_data.into_inner(), &conn),
//     }))
// }